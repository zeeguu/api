services:
  # main db
  mysql:
    image: mysql:5.7
    platform: linux/amd64
    volumes:
      - ${ZEEGUU_DATA_FOLDER}/mysql:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${ZEEGUU_MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${ZEEGUU_MYSQL_DB}
      MYSQL_USER: ${ZEEGUU_MYSQL_USER}
      MYSQL_PASSWORD: ${ZEEGUU_MYSQL_USER_PASSWORD}
    networks:
      - zeeguu_backend
    ports:
      - "3306:3306"
    restart: unless-stopped

  # main db
  fmd_mysql:
    image: mysql:5.7
    platform: linux/amd64
    volumes:
      - ${ZEEGUU_DATA_FOLDER}/fmd_mysql:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${FMD_ROOT_PASS}
      MYSQL_DATABASE: ${FMD_MYSQL_DB}
      MYSQL_USER: ${FMD_MYSQL_USER}
      MYSQL_PASSWORD: ${FMD_MYSQL_USER_PASS}
    networks:
      - zeeguu_backend
    restart: unless-stopped

  elasticsearch_v8:
    image: elasticsearch:8.12.2
    platform: linux/amd64
    # ports:
    # - 9200:9200
    # - 9300:9300
    # Ports don't have to be exposed, but it can be nice to debug.
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    volumes:
      - "${ZEEGUU_DATA_FOLDER}/elasticsearch/data:/usr/share/elasticsearch/data"
    networks:
      - zeeguu_backend
    restart: unless-stopped
    mem_limit: 512m # Useful to restrict the ammount of RAM used by ES.

  readability_server:
    image: zeeguu/readability_server
    networks:
      - zeeguu_backend
    restart: unless-stopped

  embedding_api:
    image: zeeguu/semantic-emb-api:main
    # deploy:
    #   resources:
    #     limits:
    #       cpus: '0.50'
    environment:
      SEMANTIC_EMB_API_PORT: 3654
    # ports:
    #   - 3654:3654
    # Ports don't have to be exposed, but it can be nice to debug.
    entrypoint: "python ./semantic-emb-api/app/app.py"
    volumes:
      - .:/Zeeguu-API
      - "${ZEEGUU_RESOURCES_FOLDER}/language-models:/semantic-emb-api/semantic-emb-api/app/semantic_vector/binaries"
    networks:
      - zeeguu_backend
    # When encoding certain longer documents, it might use more than
    # the available memory allocated to the container, in that case restart the service.
    mem_limit: 2512m # From testing usually the container needs about 2GBs to run
    # However, as a Dev safeguard, if needed the container is restarted to avoid
    # taking too much memory from the host.
    restart: unless-stopped

  # yaml-anchors:
  # https://support.atlassian.com/bitbucket-cloud/docs/yaml-anchors/
  zapi: &zapi_default
    depends_on:
      - mysql
      - fmd_mysql
      - elasticsearch_v8
      - readability_server
      - embedding_api
    image: zeeguu/api:latest
    build: .
    ports:
      - "127.0.0.1:8080:8080"
      # to consider mapping only to localhost cf here:
      # https://serverfault.com/questions/681571/docker-exposed-ports-accessible-from-outside-iptables-rules-ignored
      # otherwise the port is visible from the outside; even against ufw rules!
    volumes:
      - .:/Zeeguu-API
      - ${ZEEGUU_DATA_FOLDER}:/zeeguu-data
      - ${STIRI_SIMPLE_DEPLOY_PATH:-../../deployments/stiri-simple.github.io}:/deployments/stiri-simple.github.io
    #      - ./api.cfg:/Zeeguu-API/api.cfg
    #      - ./fmd.cfg:/Zeeguu-API/fmd.cfg
    #      - ./lu-mir-zeeguu-credentials.json:/Zeeguu-API/lu-mir-zeeguu-credentials.json
    environment: &zapi_env
      ZEEGUU_CONFIG: /Zeeguu-API/api.cfg
      ZEEGUU_DATA_FOLDER: /zeeguu-data/
      SENTRY_DSN: ${SENTRY_DSN}
      YOUTUBE_API_KEY: ${YOUTUBE_API_KEY}
      FLASK_MONITORING_DASHBOARD_CONFIG: /Zeeguu-API/fmd.cfg
      MICROSOFT_TRANSLATE_API_KEY: ${MICROSOFT_TRANSLATE_API_KEY}
      GOOGLE_TRANSLATE_API_KEY: ${GOOGLE_TRANSLATE_API_KEY}
      GOOGLE_APPLICATION_CREDENTIALS: /Zeeguu-API/lu-mir-zeeguu-credentials.json
      WORDNIK_API_KEY: ${WORDNIK_API_KEY}
      MULTI_LANG_TRANSLATOR_AB_TESTING: ${MULTI_LANG_TRANSLATOR_AB_TESTING}
      ZEEGUU_ES_CONN_STRING: "http://elasticsearch_v8:9200"
      ZEEGUU_EMB_API_CONN_STRING: "http://embedding_api:3654"

      # TODO: remove these two envvars and simply use the $ZEEGUU_DATA_FOLDER
      FOLDER_FOR_REPORT_OUTPUT: /zeeguu-data/crawl-reports
      CRAWL_REPORT_DATA: /zeeguu-data/crawl-reports/data

    command: /usr/sbin/apache2ctl -D FOREGROUND
    networks:
      - zeeguu_backend
    restart: unless-stopped
    # TODO: align with the docker-compose in ops which has here a logging configuration

  zapi_dev: &zapi_dev
    <<: *zapi_default
    command: python /Zeeguu-API/start.py

  zapi_dev_translations:
    <<: *zapi_dev
    environment:
      <<: *zapi_env
      DEV_SKIP_TRANSLATION: 1
# TODO add the zapi_pink back

networks:
  zeeguu_backend:
